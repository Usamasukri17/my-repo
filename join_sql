Right Join:

Queries:
select * from employees;

select * from departments;

select * from jobs;

select * from job_history;



select concat(employees.first_name,employees.last_name) as Name ,employees.salary, departments.department_name, departments.department_id from employees

right join departments on employees.department_id = departments.department_id;

order by employees.first_name asc;



select max(department_id) from employees;

select * from employees where department_id> '110';



select job_history.employee_id, jobs.job_title, job_history.start_date, job_history.end_date, jobs.max_salary from jobs

right join job_history on jobs.job_id = job_history.job_id
order by jobs.max_salary desc;
------------------------------------------------------------------------------------------------------------------------------------------
LEFT(OUTER) JOIN:
Left join returns all records from the left table and matched records from the right table.
The result from the right table is NULL if there is no match to the left table record.

Query:
select employees.first_name, employees.last_name, department.manager_id from employees 
	left join departments on employees.manager_id = department.manager_id;
------------------------------------------------------------------------------------------------------------------------------------
Cross Join:

The CROSS JOIN is used to generate a paired combination of each row of the first table with each row of the second table.
This join type is also known as cartesian join.

Queries:
select employee_id, first_name, last_name, d.department_id from employees
	cross join departments d;

select count(*) from employees
	cross join jobs;
